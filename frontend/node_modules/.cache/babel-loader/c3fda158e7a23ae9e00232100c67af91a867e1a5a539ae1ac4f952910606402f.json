{"ast":null,"code":"var _jsxFileName = \"/Users/vijay/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5005/webhooks/rest/webhook\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Smooth auto-scroll\n  useEffect(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [messages]);\n\n  // Initial greeting\n  useEffect(() => {\n    const fetchGreeting = async () => {\n      setTimeout(() => {\n        setMessages([{\n          sender: \"bot\",\n          text: \"Hello! InfoPilot at your service. What can I do for you today?\"\n        }]);\n      }, 1000);\n    };\n    fetchGreeting();\n  }, []);\n\n  // FIXED: Stable message sending without input conflicts\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input.trim()\n    };\n    const newMessages = [...messages, userMessage];\n\n    // Update messages and clear input immediately\n    setMessages(newMessages);\n    setInput(\"\"); // Clear input first\n\n    // FIXED: Delay typing indicator slightly for smooth transition\n    setTimeout(() => {\n      setIsTyping(true);\n    }, 100);\n    try {\n      const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          sender: \"user\",\n          message: userMessage.text\n        })\n      });\n      const data = await res.json();\n      const botReplies = data.map(d => ({\n        sender: \"bot\",\n        text: d.text\n      }));\n\n      // FIXED: Proper timing for bot response\n      setTimeout(() => {\n        setMessages([...newMessages, ...botReplies]);\n        setIsTyping(false);\n      }, 800);\n    } catch (err) {\n      setTimeout(() => {\n        setMessages([...newMessages, {\n          sender: \"bot\",\n          text: \"I apologize, but I'm experiencing connection difficulties. Please check your network and try again.\"\n        }]);\n        setIsTyping(false);\n      }, 800);\n    }\n  };\n\n  // FIXED: Stable key handling\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"InfoPilot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `chat-bubble ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-bubble typing\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '2px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"dot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Type your message here...\",\n        disabled: isTyping\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        disabled: isTyping || !input.trim(),\n        children: isTyping ? 'Sending...' : 'Send'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"y+n9Ho6B23MRn5kcdfXSJfzUP4U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","API_URL","App","_s","messages","setMessages","input","setInput","isTyping","setIsTyping","messagesEndRef","_messagesEndRef$curre","current","scrollIntoView","behavior","fetchGreeting","setTimeout","sender","text","sendMessage","trim","userMessage","newMessages","res","fetch","method","headers","body","JSON","stringify","message","data","json","botReplies","map","d","err","handleKeyPress","e","key","shiftKey","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","index","style","display","gap","ref","type","value","onChange","target","onKeyPress","placeholder","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/vijay/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport \"./App.css\";\n\nconst API_URL = \"http://localhost:5005/webhooks/rest/webhook\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  // Smooth auto-scroll\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages]);\n\n  // Initial greeting\n  useEffect(() => {\n    const fetchGreeting = async () => {\n      setTimeout(() => {\n        setMessages([\n          {\n            sender: \"bot\",\n            text: \"Hello! InfoPilot at your service. What can I do for you today?\",\n          }\n        ]);\n      }, 1000);\n    };\n\n    fetchGreeting();\n  }, []);\n\n  // FIXED: Stable message sending without input conflicts\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { sender: \"user\", text: input.trim() };\n    const newMessages = [...messages, userMessage];\n    \n    // Update messages and clear input immediately\n    setMessages(newMessages);\n    setInput(\"\"); // Clear input first\n    \n    // FIXED: Delay typing indicator slightly for smooth transition\n    setTimeout(() => {\n      setIsTyping(true);\n    }, 100);\n\n    try {\n      const res = await fetch(API_URL, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ sender: \"user\", message: userMessage.text }),\n      });\n      \n      const data = await res.json();\n      const botReplies = data.map((d) => ({\n        sender: \"bot\",\n        text: d.text,\n      }));\n      \n      // FIXED: Proper timing for bot response\n      setTimeout(() => {\n        setMessages([...newMessages, ...botReplies]);\n        setIsTyping(false);\n      }, 800);\n    } catch (err) {\n      setTimeout(() => {\n        setMessages([\n          ...newMessages,\n          { sender: \"bot\", text: \"I apologize, but I'm experiencing connection difficulties. Please check your network and try again.\" },\n        ]);\n        setIsTyping(false);\n      }, 800);\n    }\n  };\n\n  // FIXED: Stable key handling\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h1 className=\"title\">InfoPilot</h1>\n      \n      <div className=\"chat-window\">\n        {messages.map((msg, index) => (\n          <div key={index} className={`chat-bubble ${msg.sender}`}>\n            {msg.text}\n          </div>\n        ))}\n        \n        {/* FIXED: Smooth typing indicator with proper animation */}\n        {isTyping && (\n          <div className=\"chat-bubble typing\">\n            <span></span>\n            <div style={{display: 'flex', gap: '2px'}}>\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n              <span className=\"dot\"></span>\n            </div>\n          </div>\n        )}\n        \n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* FIXED: Stable input area that won't disappear */}\n      <div className=\"chat-input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPress={handleKeyPress}\n          placeholder=\"Type your message here...\"\n          disabled={isTyping}\n        />\n        <button \n          onClick={sendMessage} \n          disabled={isTyping || !input.trim()}\n        >\n          {isTyping ? 'Sending...' : 'Send'}\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}